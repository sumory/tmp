webpackJsonp([7],{767:function(n,s){n.exports={content:["article",["blockquote",["p","\u6b64\u6587\u6863\u9002\u914d\u4e8elor v0.3.0+\u7248\u672c"]],["p","\u4ecev0.3.1\u7248\u672c\u5f00\u59cb",["code","\u591a\u7ea7\u5904\u7406\u51fd\u6570"],"\u5373\u53ef\u6302\u8f7d\u5728",["code","app"],"\u5bf9\u8c61\u4e0a\uff0c\u4e5f\u53ef\u4ee5\u6302\u8f7d\u5230",["code","\u7ec4\u8def\u7531"],"\u4e0a\u3002"],["h2","\u51fd\u6570\u683c\u5f0f"],["p","lor\u7684\u8def\u7531\u652f\u6301\u591a\u4e2a\u5904\u7406\u51fd\u6570\uff0c \u51e1\u662f\u7b26\u5408\u4ee5\u4e0b\u683c\u5f0f\u7684\u51fd\u6570\u90fd\u53ef\u4f5c\u4e3alor\u7684\u8def\u7531\u5904\u7406\u51fd\u6570\uff1a"],["pre",{lang:"lua",highlighted:'<span class="token keyword">function</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next<span class="token punctuation">)</span>\n    <span class="token comment" spellcheck="true">-- ...</span>\n<span class="token keyword">end</span>'},["code","function(req, res, next)\n    -- ...\nend"]],["h2","\u4f7f\u7528\u65b9\u5f0f"],["p","\u4f7f\u7528\u65f6\u53ea\u8981\u5c06\u5404\u4e2a\u5904\u7406\u51fd\u6570\u6309\u987a\u5e8f\u4e32\u8054\u8d77\u6765\u5373\u53ef\uff0c \u6ce8\u610f\u53ea\u6709\u5728\u8c03\u7528",["code","next\uff08\uff09"],"\u51fd\u6570\u65f6\uff0c \u8fd9\u4e2a\u6267\u884c\u94fe\u624d\u4f1a\u5f80\u540e\u6267\u884c\u3002"],["h3","\u6570\u7ec4\u65b9\u5f0f"],["pre",{lang:"lua",highlighted:'<span class="token keyword">local</span> lor <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"lor.index"</span><span class="token punctuation">)</span>\n<span class="token keyword">local</span> app <span class="token operator">=</span> <span class="token function">lor</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token keyword">local</span> func1 <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next<span class="token punctuation">)</span>\n    <span class="token comment" spellcheck="true">-- do something</span>\n    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">end</span>\n\n<span class="token keyword">local</span> func2 <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next<span class="token punctuation">)</span>\n    <span class="token comment" spellcheck="true">-- do something</span>\n    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">end</span>\n\n<span class="token keyword">local</span> last_func <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next<span class="token punctuation">)</span>\n    res<span class="token punctuation">:</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">"end."</span><span class="token punctuation">)</span>\n<span class="token keyword">end</span>\n\napp<span class="token punctuation">:</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>func1<span class="token punctuation">,</span> func2<span class="token punctuation">,</span> last_func<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\napp<span class="token punctuation">:</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>'},["code",'local lor = require("lor.index")\nlocal app = lor()\n\nlocal func1 = function(req, res, next)\n    -- do something\n    next()\nend\n\nlocal func2 = function(req, res, next)\n    -- do something\n    next()\nend\n\nlocal last_func = function(req, res, next)\n    res:send("end.")\nend\n\napp:get("/",  {func1, func2, last_func})\n\napp:run()']],["h3","\u53d8\u957f\u53c2\u6570\u65b9\u5f0f"],["pre",{lang:"lua",highlighted:'<span class="token keyword">local</span> lor <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"lor.index"</span><span class="token punctuation">)</span>\n<span class="token keyword">local</span> app <span class="token operator">=</span> <span class="token function">lor</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token keyword">local</span> func1 <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next<span class="token punctuation">)</span>\n    req<span class="token punctuation">.</span>params<span class="token punctuation">.</span>count <span class="token operator">=</span> <span class="token number">0</span>\n    req<span class="token punctuation">.</span>params<span class="token punctuation">.</span>count <span class="token operator">=</span> req<span class="token punctuation">.</span>params<span class="token punctuation">.</span>count <span class="token operator">+</span> <span class="token number">1</span>\n    <span class="token comment" spellcheck="true">-- do something</span>\n    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">end</span>\n\n<span class="token keyword">local</span> func2 <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next<span class="token punctuation">)</span>\n    req<span class="token punctuation">.</span>params<span class="token punctuation">.</span>count <span class="token operator">=</span> req<span class="token punctuation">.</span>params<span class="token punctuation">.</span>count <span class="token operator">+</span> <span class="token number">1</span>\n    <span class="token comment" spellcheck="true">-- do something</span>\n    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">end</span>\n\n<span class="token keyword">local</span> last_func <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next<span class="token punctuation">)</span>\n    res<span class="token punctuation">:</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">"the `count` param is:"</span> <span class="token operator">..</span> req<span class="token punctuation">.</span>params<span class="token punctuation">.</span>count<span class="token punctuation">)</span>\n<span class="token keyword">end</span>\n\napp<span class="token punctuation">:</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> func1<span class="token punctuation">,</span> func2<span class="token punctuation">,</span> last_func<span class="token punctuation">)</span>\n\napp<span class="token punctuation">:</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>'},["code",'local lor = require("lor.index")\nlocal app = lor()\n\nlocal func1 = function(req, res, next)\n    req.params.count = 0\n    req.params.count = req.params.count + 1\n    -- do something\n    next()\nend\n\nlocal func2 = function(req, res, next)\n    req.params.count = req.params.count + 1\n    -- do something\n    next()\nend\n\nlocal last_func = function(req, res, next)\n    res:send("the `count` param is:" .. req.params.count)\nend\n\napp:get("/", func1, func2, last_func)\n\napp:run()']],["h3","\u6df7\u5408\u683c\u5f0f\u53c2\u6570"],["pre",{lang:"lua",highlighted:'<span class="token keyword">local</span> lor <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"lor.index"</span><span class="token punctuation">)</span>\n<span class="token keyword">local</span> app <span class="token operator">=</span> <span class="token function">lor</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token keyword">local</span> func1 <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next<span class="token punctuation">)</span>\n    req<span class="token punctuation">.</span>params<span class="token punctuation">.</span>count <span class="token operator">=</span> <span class="token number">0</span>\n    req<span class="token punctuation">.</span>params<span class="token punctuation">.</span>count <span class="token operator">=</span> req<span class="token punctuation">.</span>params<span class="token punctuation">.</span>count <span class="token operator">+</span> <span class="token number">1</span>\n    <span class="token comment" spellcheck="true">-- do something</span>\n    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">end</span>\n\n<span class="token keyword">local</span> func2 <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next<span class="token punctuation">)</span>\n    req<span class="token punctuation">.</span>params<span class="token punctuation">.</span>count <span class="token operator">=</span> req<span class="token punctuation">.</span>params<span class="token punctuation">.</span>count <span class="token operator">+</span> <span class="token number">1</span>\n    <span class="token comment" spellcheck="true">-- do something</span>\n    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">end</span>\n\n<span class="token keyword">local</span> last_func <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next<span class="token punctuation">)</span>\n    res<span class="token punctuation">:</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">"the `count` param is:"</span> <span class="token operator">..</span> req<span class="token punctuation">.</span>params<span class="token punctuation">.</span>count<span class="token punctuation">)</span>\n<span class="token keyword">end</span>\n\napp<span class="token punctuation">:</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>func1<span class="token punctuation">,</span> func2<span class="token punctuation">}</span><span class="token punctuation">,</span> last_func<span class="token punctuation">)</span>\n<span class="token comment" spellcheck="true">-- app:get("/", func1, {func2}, last_func) --\u652f\u6301function\u6570\u7ec4\u683c\u5f0f\u548c\u666e\u901afunction\u6df7\u5408</span>\n<span class="token comment" spellcheck="true">-- app:get("/", func1, {func2, last_func})</span>\n\napp<span class="token punctuation">:</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>'},["code",'local lor = require("lor.index")\nlocal app = lor()\n\nlocal func1 = function(req, res, next)\n    req.params.count = 0\n    req.params.count = req.params.count + 1\n    -- do something\n    next()\nend\n\nlocal func2 = function(req, res, next)\n    req.params.count = req.params.count + 1\n    -- do something\n    next()\nend\n\nlocal last_func = function(req, res, next)\n    res:send("the `count` param is:" .. req.params.count)\nend\n\napp:get("/", {func1, func2}, last_func)\n-- app:get("/", func1, {func2}, last_func) --\u652f\u6301function\u6570\u7ec4\u683c\u5f0f\u548c\u666e\u901afunction\u6df7\u5408\n-- app:get("/", func1, {func2, last_func})\n\napp:run()']],["h2","\u7528\u9014\u3001\u573a\u666f"],["p","\u5f53\u9700\u8981\u5728\u67d0\u4e2a\u8def\u7531\u5904\u7406\u524d\u8fdb\u884c\u4e00\u4e9b\u901a\u7528\u7684\u903b\u8f91\u5904\u7406\uff0c \u5982\u7f16\u89e3\u7801\u3001\u53c2\u6570\u68c0\u67e5\u3001\u767b\u5f55\u72b6\u6001\u68c0\u67e5\u7b49\uff0c \u4f46\u53c8\u4e0d\u60f3\u901a\u8fc7",["code","app:use"],"\u7f16\u5199\u5355\u72ec\u7684\u4e2d\u95f4\u4ef6\u5904\u7406\uff0c \u8fd9\u65f6\u5c31\u53ef\u5728\u524d\u9762\u6dfb\u52a0\u8fd9\u4e9b\u5904\u7406\u51fd\u6570, \u793a\u4f8b\u5982\u4e0b\uff1a"],["pre",{lang:"lua",highlighted:'<span class="token keyword">local</span> lor <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"lor.index"</span><span class="token punctuation">)</span>\n<span class="token keyword">local</span> app <span class="token operator">=</span> <span class="token function">lor</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token keyword">local</span> check_name <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">--\u2460</span>\n    <span class="token keyword">if</span> <span class="token keyword">not</span> req<span class="token punctuation">.</span>query<span class="token punctuation">.</span>name <span class="token keyword">or</span> req<span class="token punctuation">.</span>query<span class="token punctuation">.</span>name <span class="token operator">==</span> <span class="token string">""</span> <span class="token keyword">then</span>\n        res<span class="token punctuation">:</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">"error param: name"</span><span class="token punctuation">)</span>\n    <span class="token keyword">else</span>\n        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">end</span>\n<span class="token keyword">end</span>\n\n<span class="token keyword">local</span> check_age <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">--\u2461</span>\n    <span class="token keyword">local</span> age <span class="token operator">=</span> req<span class="token punctuation">.</span>query<span class="token punctuation">.</span>age\n    <span class="token keyword">if</span> age <span class="token keyword">and</span> <span class="token function">tonumber</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span> <span class="token keyword">then</span>\n        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">else</span>\n        res<span class="token punctuation">:</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">"error param: age should be larger than 0"</span><span class="token punctuation">)</span>\n    <span class="token keyword">end</span>\n<span class="token keyword">end</span>\n\n<span class="token keyword">local</span> save_user <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">--\u2462</span>\n    res<span class="token punctuation">:</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">"save user:"</span> <span class="token operator">..</span> req<span class="token punctuation">.</span>query<span class="token punctuation">.</span>name <span class="token operator">..</span> <span class="token string">" "</span> <span class="token operator">..</span> req<span class="token punctuation">.</span>query<span class="token punctuation">.</span>age<span class="token punctuation">)</span>\n<span class="token keyword">end</span>\n\napp<span class="token punctuation">:</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"/user/save"</span><span class="token punctuation">,</span> check_name<span class="token punctuation">,</span> check_age<span class="token punctuation">,</span> save_user<span class="token punctuation">)</span>\n\napp<span class="token punctuation">:</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>'},["code",'local lor = require("lor.index")\nlocal app = lor()\n\nlocal check_name = function(req, res, next) --\u2460\n    if not req.query.name or req.query.name == "" then\n        res:send("error param: name")\n    else\n        next()\n    end\nend\n\nlocal check_age = function(req, res, next) --\u2461\n    local age = req.query.age\n    if age and tonumber(age) > 0 then\n        next()\n    else\n        res:send("error param: age should be larger than 0")\n    end\nend\n\nlocal save_user = function(req, res, next) --\u2462\n    res:send("save user:" .. req.query.name .. " " .. req.query.age)\nend\n\napp:get("/user/save", check_name, check_age, save_user)\n\napp:run()']],["p","\u8bbf\u95ee\u4ee5\u4e0burl\u65f6\u5bf9\u5e94\u7684\u5904\u7406\u5206\u522b\u662f\uff1a"],["ul",["li",["p",'"user/save": \u4e0d\u6ee1\u8db3check_name,\u6240\u4ee5\u8fd4\u56de',["code","error param: name"]]],["li",["p",'"/user/save?name=sumory": \u6ee1\u8db3check_name\u4f46\u4e0d\u6ee1\u8db3check_age\uff0c\u6240\u4ee5\u8fd4\u56de',["code","error param: age should be larger than 0"]]],["li",["p",'"/user/save?name=sumory&age=10": \u6ee1\u8db3\u6240\u6709\u591a\u7ea7\u4e2d\u95f4\u4ef6\u51fd\u6570\uff0c \u6545\u7ecf\u8fc7\u2460\u2461\u2462\u5904\u7406\u540e\u8fd4\u56de',["code","save user:sumory 10"]]]]],meta:{title:"\u591a\u7ea7\u5904\u7406\u51fd\u6570",type:"\u8def\u7531",order:103,filename:"docs/multi_business_middleware.zh-CN.md"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#\u51fd\u6570\u683c\u5f0f",title:"\u51fd\u6570\u683c\u5f0f"},"\u51fd\u6570\u683c\u5f0f"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u4f7f\u7528\u65b9\u5f0f",title:"\u4f7f\u7528\u65b9\u5f0f"},"\u4f7f\u7528\u65b9\u5f0f"]],["li",["a",{className:"bisheng-toc-h2",href:"#\u7528\u9014\u3001\u573a\u666f",title:"\u7528\u9014\u3001\u573a\u666f"},"\u7528\u9014\u3001\u573a\u666f"]]]}}});